{"ast":null,"code":"var _jsxFileName = \"/Users/oliverhuo/Desktop/calculator-redux/src/components/counterInput.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport addSum from \"./sumAction\";\nimport subSum from \"./subAction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CounterInput extends React.Component {\n  render() {\n    let input;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: event => input = parseInt(event.target.value),\n          type: \"number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => store.dispatch({\n            type: 'INCREMENT'\n          }),\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: event => input = parseInt(event.target.value),\n          type: \"number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.props.onClick(input, \"SUB\"),\n          children: \"Sub\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this);\n  }\n\n} // mapDispatchToProps\n// dispatch is a function that will emit an action to the store\n// notice that it also accepts props (i.e., React Props that you\n// would provide to the Component)\n\n\nlet mapDispatchToProps = function (dispatch, props) {\n  return {\n    onClick: (val, type) => {\n      if (type === 'ADD') {\n        dispatch(addSum(val));\n      }\n\n      if (type === 'SUB') {\n        dispatch(subSum(val));\n      }\n    }\n  };\n}; // this guy isn't used here, but just reminding you of it's existence!\n\n\nfunction mapStateToProps(state, props) {\n  return {};\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CounterInput);","map":{"version":3,"sources":["/Users/oliverhuo/Desktop/calculator-redux/src/components/counterInput.js"],"names":["React","connect","addSum","subSum","CounterInput","Component","render","input","event","parseInt","target","value","store","dispatch","type","props","onClick","mapDispatchToProps","val","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,MAAP,MAAmB,aAAnB;;;AAEA,MAAMC,YAAN,SAA2BJ,KAAK,CAACK,SAAjC,CAA2C;AACzCC,EAAAA,MAAM,GAAG;AACP,QAAIC,KAAJ;AAEA,wBACE;AAAA,8BACE;AAAA,gCACE;AACE,UAAA,QAAQ,EAAGC,KAAD,IAAYD,KAAK,GAAGE,QAAQ,CAACD,KAAK,CAACE,MAAN,CAAaC,KAAd,CADxC;AAEE,UAAA,IAAI,EAAE;AAFR;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE;AAAQ,UAAA,OAAO,EAAE,MAAMC,KAAK,CAACC,QAAN,CAAe;AAAEC,YAAAA,IAAI,EAAE;AAAR,WAAf,CAAvB;AAAA,oBAA+D;AAA/D;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AAAA,gCACA;AACE,UAAA,QAAQ,EAAGN,KAAD,IAAYD,KAAK,GAAGE,QAAQ,CAACD,KAAK,CAACE,MAAN,CAAaC,KAAd,CADxC;AAEE,UAAA,IAAI,EAAE;AAFR;AAAA;AAAA;AAAA;AAAA,gBADA,eAKA;AAAQ,UAAA,OAAO,EAAE,MAAM,KAAKI,KAAL,CAAWC,OAAX,CAAmBT,KAAnB,EAA0B,KAA1B,CAAvB;AAAA,oBAA0D;AAA1D;AAAA;AAAA;AAAA;AAAA,gBALA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAkBD;;AAtBwC,C,CAyB3C;AACA;AACA;AACA;;;AACA,IAAIU,kBAAkB,GAAG,UAAUJ,QAAV,EAAoBE,KAApB,EAA2B;AAClD,SAAO;AACLC,IAAAA,OAAO,EAAE,CAACE,GAAD,EAAMJ,IAAN,KAAe;AACtB,UAAGA,IAAI,KAAK,KAAZ,EAAkB;AAChBD,QAAAA,QAAQ,CAACX,MAAM,CAACgB,GAAD,CAAP,CAAR;AACD;;AACD,UAAGJ,IAAI,KAAK,KAAZ,EAAkB;AAChBD,QAAAA,QAAQ,CAACV,MAAM,CAACe,GAAD,CAAP,CAAR;AACD;AACF;AARI,GAAP;AAUD,CAXD,C,CAaA;;;AACA,SAASC,eAAT,CAAyBC,KAAzB,EAAgCL,KAAhC,EAAuC;AACrC,SAAO,EAAP;AACD;;AAED,eAAed,OAAO,CAACkB,eAAD,EAAkBF,kBAAlB,CAAP,CAA6Cb,YAA7C,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport addSum from \"./sumAction\";\nimport subSum from \"./subAction\";\n\nclass CounterInput extends React.Component {\n  render() {\n    let input;\n\n    return (\n      <div>\n        <div>\n          <input\n            onChange={(event) => (input = parseInt(event.target.value))}\n            type={\"number\"}\n          />\n          <button onClick={() => store.dispatch({ type: 'INCREMENT' })}>{\"Add\"}</button>\n        </div>\n        <div>\n        <input\n          onChange={(event) => (input = parseInt(event.target.value))}\n          type={\"number\"}\n        />\n        <button onClick={() => this.props.onClick(input, \"SUB\")}>{\"Sub\"}</button>\n      </div>\n    </div>\n    );\n  }\n}\n\n// mapDispatchToProps\n// dispatch is a function that will emit an action to the store\n// notice that it also accepts props (i.e., React Props that you\n// would provide to the Component)\nlet mapDispatchToProps = function (dispatch, props) {\n  return {\n    onClick: (val, type) => {\n      if(type === 'ADD'){\n        dispatch(addSum(val));\n      }\n      if(type === 'SUB'){\n        dispatch(subSum(val));\n      }\n    },\n  };\n};\n\n// this guy isn't used here, but just reminding you of it's existence!\nfunction mapStateToProps(state, props) {\n  return {};\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CounterInput);\n"]},"metadata":{},"sourceType":"module"}